# -*- coding: utf-8 -*-
"""Face detection - Harrscade Classifier,HoG,Dlib

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dPyggd5ieKlaMspVWWxorrmQWVU5IjEf

# Computer Vision Masterclass - Face detection

## OpenCV

### Loading the image
"""

import cv2 #opencv library

from google.colab import drive
drive.mount('/content/drive')

image = cv2.imread('/content/peopp.jpg')

image.shape

#cv2.imshow(image)
from google.colab.patches import cv2_imshow

image = cv2.resize(image,(800,600))
image.shape

cv2_imshow(image)

600 * 800 * 3, 600 * 800, 1440000 - 480000

image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
cv2_imshow(image_gray)

image_gray.shape

image_gray.shape

"""### Detecting faces"""

face_detector = cv2.CascadeClassifier('/content/drive/MyDrive/Copy of haarcascade_frontalface_default.xml')

detections = face_detector.detectMultiScale(image_gray)

detections # detected faces

len(detections)

for (x,y,w,h) in detections:
  cv2.rectangle(image,(x,y),(x+w,y+h),(255,0,255),2)
  cv2_imshow(image)

"""### Haarcascade parameters"""

image = cv2.imread('/content/peopp.jpg')
image = cv2.resize(image, (600, 600))
image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
detections = face_detector.detectMultiScale(image_gray, scaleFactor = 1.02)
for (x, y, w, h) in detections:
  cv2.rectangle(image, (x, y), (x + w, y + h), (0,255,0), 2)
cv2_imshow(image)

image = cv2.imread('/content/peopp.jpg')
image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
detections = face_detector.detectMultiScale(image_gray, scaleFactor=1.2, minNeighbors=7,
                                            minSize=(5,5), maxSize=(100,100))
for (x, y, w, h) in detections:
  print(w, h)
  cv2.rectangle(image, (x, y), (x + w, y + h), (0,255,0), 2)
cv2_imshow(image)

"""### Eye detection"""

eye_detector = cv2.CascadeClassifier('/content/drive/MyDrive/Copy of haarcascade_frontalface_default.xml')

image = cv2.imread('/content/peopp.jpg')
#image = cv2.resize(image, (800, 600))
print(image.shape)
image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

face_detections = face_detector.detectMultiScale(image_gray, scaleFactor = 1.3, minSize = (30,30))
for (x, y, w, h) in face_detections:
  cv2.rectangle(image, (x, y), (x + w, y + h), (0,255,0), 2)

eye_detections = eye_detector.detectMultiScale(image_gray, scaleFactor = 1.05, minNeighbors=10, maxSize=(100,100))
for (x, y, w, h) in eye_detections:
  print(w, h)
  cv2.rectangle(image, (x, y), (x + w, y + h), (0,0,255), 2)

cv2_imshow(image)

"""### Other objects

## Dlib
"""

import dlib

"""### Detecting faces with HOG"""

image = cv2.imread('/content/peopp.jpg')
cv2_imshow(image)

face_detector_hog = dlib.get_frontal_face_detector()

detections = face_detector_hog(image,1)

detections, len(detections)

for face in detections:
  #print(face)
  print(face.left())
  print(face.top())
  print(face.right())
  print(face.bottom())
  l,t,r,b = face.left(), face.top(), face.right(), face.bottom()
  cv2.rectangle(image,(l,t),(r,b),(0,255,255),2)
  cv2_imshow(image)

"""### Detecting faces with CNN (Convolutional Neural Networks)"""

image = cv2.imread('/content/peopp.jpg')
cnn_detector = dlib.cnn_face_detection_model_v1('/content/drive/MyDrive/Copy of mmod_human_face_detector.dat')

detections = cnn_detector(image, 1)
for face in detections:
  l, t, r, b, c = face.rect.left(), face.rect.top(), face.rect.right(), face.rect.bottom(), face.confidence
  print(c)
  cv2.rectangle(image, (l, t), (r, b), (255, 255, 0), 2)
cv2_imshow(image)